<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<HEAD>
		<TITLE>set_binary</TITLE>
		<style TYPE="text/css"> BODY { font-family:verdana,arial,helvetica; margin:0; }
	</style>
	</HEAD>
	<BODY>
		<TABLE class="clsContainer" style="TABLE-LAYOUT: fixed" cellSpacing="0" cellPadding="15"
			width="100%" border="0">
			<TR>
				<TD vAlign="top">
					<h1>set_binary</h1>
					<p>Set the type of the variable. Binary or floating point.</p>
					<p><b>unsigned char set_binary(lprec </b>*<i>lp</i><b>, int </b><i>column</i><b>, unsigned char </b><i>must_be_bin</i><b>);</b></p>
					<p class="label"><b>Return Value</b></p>
					<p><b>set_binary</b> returns TRUE (1) if the operation was successful. A return 
						value of FALSE (0) indicates an error.<br>
					</p>
					<p class="label"><b>Parameters</b></p>
					<p class="dt"><i>lp</i></p>
					<p class="indent">Pointer to previously created lp model. See return value of <A href="make_lp.htm">
							make_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>, <A href="read_lp.htm">read_lp, 
							read_LP</A>, <A href="read_mps.htm">read_mps, read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A></p>
					<p class="dt"><i>column</i></p>
					<p class="indent">The column number of the variable that must be set. It must be 
						between 1 and the number of columns in the lp.</p>
					<p class="dt"><i>must_be_bin</i></p>
					<p class="indent">TRUE (1) if the variable must be binary, FALSE (0) if not.</p>
					<p class="label"><b>Remarks</b></p>
					<p>The <b>set_binary</b> function defines if a variable must be binary or not. 
						Default a variable is not binary. A binary variable is an integer variable with 
						a lower bound of 0 and an upper bound of 1. This function also sets these 
						bounds. The argument <i>must_be_bin</i> defines what the status of the variable 
						becomes. From the moment there is at least one integer variable in the model, 
						the Branch and Bound algorithm is used to make these variables integer. Note 
						that solving times can be considerably larger when there are integer variables.
						See <a href="integer.htm">integer variables</a> for a description about integer variables.
					</p>
					<p class="label"><b>Example</b></p>
					<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "lp_lib.h"

int main(void)
{
  lprec *lp;

  /* Create a new LP model */
  lp = make_lp(0, 2);
  if(lp == NULL) {
    fprintf(stderr, "Unable to create new LP model\n");
    return(1);
  }

  set_binary(lp, 1, TRUE); /* sets variable 1 to binary */

  delete_lp(lp);
  return(0);
}
</code></pre>
					<p>
						<A HREF="lp_solveAPIreference.htm">lp_solve API reference</A></p>
					<p>
						<b>See Also</b> <A HREF="make_lp.htm">make_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>,
						<A href="read_lp.htm">read_lp, read_LP</A>, <A HREF="read_mps.htm">read_mps, 
							read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A>, <A HREF="is_binary.htm">is_binary</A>, <A HREF="is_int.htm">is_int</A>,
						<A HREF="set_int.htm">set_int</A></p>
				</TD>
			</TR>
		</TABLE>
	</BODY>
</html>
