<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<HEAD>
		<TITLE>get_solutionlimit</TITLE>
		<style TYPE="text/css"> BODY { font-family:verdana,arial,helvetica; margin:0; }
	</style>
	</HEAD>
	<BODY>
		<TABLE class="clsContainer" style="TABLE-LAYOUT: fixed" cellSpacing="0" cellPadding="15"
			width="100%" border="0">
			<TR>
				<TD vAlign="top">
					<h1>get_solutionlimit</h1>
					<p>Returns the solution number that must be returned.</p>
					<p><b>int get_solutionlimit(lprec </b>*<i>lp</i><b>);</b></p>
					<p class="label"><b>Return Value</b></p>
					<p><b>get_solutionlimit</b> returns the solution number that must be returned. This 
						value gives the number of the solution that must be returned.
					</p>
					<p class="label"><b>Parameters</b></p>
					<p class="dt"><i>lp</i></p>
					<p class="indent">Pointer to previously created lp model. See return value of <A href="make_lp.htm">
							make_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>, <A href="read_lp.htm">read_lp, 
							read_LP</A>, <A href="read_mps.htm">read_mps, read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A></p>
					<p class="label"><b>Remarks</b></p>
					<p>This is only valid if there are integer, semi-continious or SOS variables in the 
						model so that the branch-and-bound algoritm is used. If there are more 
						solutions with the same objective value, then this number specifies which 
						solution must be returned. This can be used to retrieve all possible solutions. 
						Start with 1 till <A href="get_solutioncount.htm">get_solutioncount</A>
					</p>
					<p class="label"><b>Example</b></p>
					<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "lp_lib.h"

int main(void)
{
  lprec *lp;
  int solutionlimit;

  /* Create a new LP model */
  lp = make_lp(0, 0);
  if(lp == NULL) {
    fprintf(stderr, "Unable to create new LP model\n");
    return(1);
  }

  solve(lp);

  solutionlimit = get_solutionlimit(lp);

  delete_lp(lp);
  return(0);
}
</code></pre>
					<p>
						<A HREF="lp_solveAPIreference.htm">lp_solve API reference</A></p>
					<p>
						<b>See Also</b> <A HREF="make_lp.htm">make_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>,
						<A href="read_lp.htm">read_lp, read_LP</A>, <A HREF="read_mps.htm">read_mps, 
							read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A>, <A HREF="set_solutionlimit.htm">set_solutionlimit</A>, <A HREF="get_solutioncount.htm">
							get_solutioncount</A></p>
				</TD>
			</TR>
		</TABLE>
	</BODY>
</html>
