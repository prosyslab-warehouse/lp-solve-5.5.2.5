<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<HEAD>
		<TITLE>get_sensitivity_rhs, get_ptr_sensitivity_rhs, get_dual_solution,
			get_ptr_dual_solution, get_var_dualresult</TITLE>
		<style TYPE="text/css"> BODY { font-family:verdana,arial,helvetica; margin:0; }
	</style>
	</HEAD>
	<BODY>
		<TABLE class="clsContainer" style="TABLE-LAYOUT: fixed" cellSpacing="0" cellPadding="15"
			width="100%" border="0">
			<TR>
				<TD vAlign="top">
					<h1>get_sensitivity_rhs, get_ptr_sensitivity_rhs, get_dual_solution,
						get_ptr_dual_solution, get_var_dualresult</h1>
					<p>Returns the sensitivity of the constraints and the variables.</p>
					<p><b>unsigned char get_sensitivity_rhs(lprec </b>*<i>lp</i><b>, REAL </b>*<i>duals</i><b>, REAL </b>*<i>dualsfrom</i><b>, REAL </b>*<i>dualstill</i><b>);</b></p>
					<p><b>unsigned char get_ptr_sensitivity_rhs(lprec </b>*<i>lp</i><b>, REAL </b>**<i>ptr_duals</i><b>, REAL </b>**<i>ptr_dualsfrom</i><b>, REAL </b>**<i>ptr_dualstill</i><b>);</b></p>
					<p><b>unsigned char get_dual_solution(lprec </b>*<i>lp</i><b>, REAL </b>*<i>duals</i><b>);</b></p>
					<p><b>unsigned char get_ptr_dual_solution(lprec </b>*<i>lp</i><b>, REAL </b>**<i>ptr_duals</i><b>);</b></p>
					<p><b>REAL get_var_dualresult(lprec </b>*<i>lp</i><b>, int </b><i>index</i><b>);</b></p>
					<p class="label"><b>Return Value</b></p>
					<p><b>get_sensitivity_rhs, get_ptr_sensitivity_rhs, get_dual_solution,
							get_ptr_dual_solution</b> return TRUE (1) if the operation was successful.
						A return value of FALSE (0) indicates an error.<br>
						<b>get_var_dualresult</b> returns the reduced cost.
					</p>
					<p class="label"><b>Parameters</b></p>
					<p class="dt"><i>lp</i></p>
					<p class="indent">Pointer to previously created lp model. See return value of <A href="make_lp.htm">
							make_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>, <A href="read_lp.htm">read_lp, read_LP</A>, <A href="read_mps.htm">read_mps, read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A></p>
					<p class="dt"><i>duals</i></p>
					<p class="indent">An array that will contain the values of the dual variables aka
						reduced costs.</p>
					<p class="dt"><i>ptr_duals</i></p>
					<p class="indent">The address of a pointer that will point to an array that will
						contain the values of the dual variables aka reduced costs.</p>
					<p class="dt"><i>dualsfrom</i></p>
					<p class="indent">An array that will contain the values of the lower limits on the
						dual variables aka reduced costs.</p>
					<p class="dt"><i>ptr_dualsfrom</i></p>
					<p class="indent">The address of a pointer that will point to an array that will
						contain the values of the lower limits of the dual variables aka reduced costs.</p>
					<p class="dt"><i>dualstill</i></p>
					<p class="indent">An array that will contain the values of the upper limits on the
						dual variables aka reduced costs.</p>
					<p class="dt"><i>ptr_dualstill</i></p>
					<p class="indent">The address of a pointer that will point to an array that will
						contain the values of the upper limits of the dual variables aka reduced costs.</p>
					<p class="dt"><i>index</i></p>
					<p class="indent">The column of the variable for which the reduced cost is
						required. Note that this is the column number before presolve was done, if
						active. If index is 0, then the value of the objective function is returned by <i>get_var_dualresult</i></p>
					<p class="label"><b>Remarks</b></p>
					<p>The <b>get_sensitivity_rhs</b>, <b>get_ptr_sensitivity_rhs</b> functions return
						the values of the dual variables aka reduced costs and their limits.<br>
						The <b>get_dual_solution</b>, <b>get_ptr_dual_solution</b>, <b>get_var_dualresult</b> functions return only
						the value(s) of the dual variables aka reduced costs.<br>
						These values are only valid after a successful <A href="solve.htm">solve</A> and
						if there are integer variables in the model then only if <A href="set_presolve.htm">set_presolve</A> is called before solve with
						parameter <i>PRESOLVE_SENSDUALS</i>.<br>
						Function <b>get_sensitivity_rhs</b> needs an array that is already dimensioned with <A href="get_Nrows.htm">get_Nrows</A>+<A href="get_Ncolumns.htm">get_Ncolumns</A> elements.<br>
						Function <b>get_dual_solution</b> needs an array that is already dimensioned with 1+<A href="get_Nrows.htm">get_Nrows</A>+<A href="get_Ncolumns.htm">get_Ncolumns</A> elements.<br>
						<b>get_ptr_sensitivity_rhs</b> and <b>get_ptr_dual_solution</b> return a
						pointer to an array already dimensioned by lp_solve.<br>
                                                <br>
                                                For functions <b>get_sensitivity_rhs</b> and <b>get_ptr_sensitivity_rhs</b>, Element 0 will contain the value of the
						first row, element 1 of the second row, ... Element get_Nrows contains the
						value for the first variable, element get_Nrows+1 the value for the second
						variable and so on.<br>
                                                <br>
						For functions <b>get_dual_solution</b> and <b>get_ptr_dual_solution</b>
						the index starts from 1 and element 0 is not used.
                                                The first get_Nrows elements contain the duals of the constraints, the
                                                next get_Ncolumns elements contain the duals of the variables.<br>
                                                <br>
						The dual values or reduced costs values indicate that the objective function
						will change with the value of the reduced cost if the restriction is changed
						with 1 unit. There will only be a reduced cost if the value is bounded by the
						restriction, else it is zero. Note that the sign indicates if the objective
						function will increase or decrease. The reduced costs remains constant as long
						as the restriction stays within the lower/upper range also provided with these
						functions (<i>dualsfrom</i>, <i>dualstill</i>). If there is no reduced cost, or
						no lower/upper limit, then these values are (-)infinity.
					</p>
					<p>Note that <b>get_ptr_sensitivity_rhs</b> and <b>get_ptr_dual_solution</b> return a pointer to memory allocated and maintained
					   by lp_solve. Be careful what you do with it. Don't modify its contents or free the memory.
					   Unexpected behaviour would occur. Also note that this memory pointer is only guaranteed to
					   remain constant until a next lp_solve API call is done. You should call this function again
					   to make sure you have again the correct pointer. Otherwise, this pointer could point to invalid
					   memory. This should not be a problem since this call is very efficient.</p>
					<p class="label"><b>Example</b></p>
					<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "lp_lib.h"

int main(void)
{
  lprec *lp;
  REAL duals[1+2], dualsfrom[1+2], dualstill[1+2], *ptr_duals, *ptr_dualsfrom, *ptr_dualstill;

  /* Create a new LP model */
  lp = make_lp(0, 2);
  if(lp == NULL) {
    fprintf(stderr, "Unable to create new LP model\n");
    return(1);
  }

  str_set_obj_fn(lp, "1 1");
  str_add_constraint(lp, "2 4", GE, 10);
  set_lowbo(lp, 1, 1);

  solve(lp);

  get_sensitivity_rhs(lp, duals, dualsfrom, dualstill);
  get_ptr_sensitivity_rhs(lp, &amp;ptr_duals, &amp;ptr_dualsfrom, &amp;ptr_dualstill);

  delete_lp(lp);
  return(0);
}
</code></pre>
					<p>
						<A HREF="lp_solveAPIreference.htm">lp_solve API reference</A></p>
					<p>
						<b>See Also</b> <A HREF="make_lp.htm">make_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>, <A href="read_lp.htm">read_lp,
							read_LP</A>, <A HREF="read_mps.htm">
							read_mps, read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A>, <a href="is_feasible.htm">is_feasible</a>, <A HREF="get_objective.htm">
							get_objective</A>, <A HREF="get_working_objective.htm">get_working_objective</A>,
						<a href="get_variables.htm">get_variables, get_ptr_variables</a>, <a href="get_primal_solution.htm">
							get_primal_solution, get_ptr_primal_solution, get_var_primalresult</a>, <a href="get_sensitivity_obj.htm">
							get_sensitivity_obj, get_ptr_sensitivity_obj, get_sensitivity_objex,
							get_ptr_sensitivity_objex</a>,
					</p>
				</TD>
			</TR>
		</TABLE>
	</BODY>
</html>
