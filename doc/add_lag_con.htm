<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<HEAD>
		<TITLE>add_lag_con, str_add_lag_con</TITLE>
		<style TYPE="text/css"> BODY { font-family:verdana,arial,helvetica; margin:0; }
	</style>
	</HEAD>
	<BODY>
		<TABLE class="clsContainer" style="TABLE-LAYOUT: fixed" cellSpacing="0" cellPadding="15"
			width="100%" border="0">
			<TR>
				<TD vAlign="top">
					<h1>add_lag_con, str_add_lag_con</h1>
					<p>Add a Lagrangian constraint to the lp.</p>
                                        <p><b>The Lagrangian solver does not work. Do not use this call.</b></p>
					<p><b>unsigned char add_lag_con(lprec </b>*<i>lp</i><b>, REAL </b>*<i>row</i><b>, int </b><i>con_type</i><b>, REAL </b><i>rhs</i><b>);</b></p>
					<p><b>unsigned char str_add_lag_con(lprec </b>*<i>lp</i><b>, char </b>*<i>row_string</i><b>, int </b><i>con_type</i><b>, REAL </b><i>rhs</i><b>);</b></p>
					<p class="label"><b>Return Value</b></p>
					<p><b>add_lag_con</b> and <b>str_add_lag_con</b> returns TRUE (1) if the operation
						was successful. A return value of FALSE (0) indicates an error.
					</p>
					<p class="label"><b>Parameters</b></p>
					<p class="dt"><i>lp</i></p>
					<p class="indent">Pointer to previously created lp model. See return value of <A href="make_lp.htm">
							make_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>, <A href="read_lp.htm">read_lp,
							read_LP</A>, <A href="read_mps.htm">read_mps, read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A></p>
					<p class="dt"><i>row</i></p>
					<p class="indent">An array with column elements that contains the values of the
						row.</p>
					<p class="dt"><i>row_string</i></p>
					<p class="indent">A string with column elements that contains the values of the
						row. Each element must be separated by space(s).</p>
					<p class="dt"><i>con_type</i></p>
					<p class="indent">The type of the constraint. Can by any of the following values:</p>
					<TABLE id="Table2" cellSpacing="1" cellPadding="1" width="100%" border="1">
						<TR>
							<TD>LE (1)</TD>
							<TD>Less than or equal (&lt;=)</TD>
						</TR>
						<TR>
							<TD>EQ (3)</TD>
							<TD>Equal (=)</TD>
						</TR>
						<TR>
							<TD>GE (2)</TD>
							<TD>Greater than or equal (&gt;=)</TD>
						</TR>
					</TABLE>
					<p class="dt"><i>rhs</i></p>
					<p class="indent">The value of the right hand side (RHS).</p>
					<p class="label"><b>Remarks</b></p>

                                        <p><b>The Lagrangian solver does not work. Do not use this call.</b></p>

					<p>The <b>add_lag_con</b>, <b>str_add_lag_con</b> functions adds a Lagrangian row
						to the model (at the end) and sets all values of the row at once.<br>
						Note that element 0 of the array is not considered (i.e. ignored). Column 1 is
						element 1, column 2 is element 2, ...
					</p>
					<p class="label"><b>Example</b></p>
					<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "lp_lib.h"

int main(void)
{
  lprec *lp;
  REAL row[1+2]; /* must be 1 more then number of columns ! */

  /* Create a new LP model */
  lp = make_lp(0, 2);
  if(lp == NULL) {
    fprintf(stderr, "Unable to create new LP model\n");
    return(1);
  }

  row[1] = 1.0;
  row[2] = 1.0;
  add_lag_con(lp, row, LE, 1.0); /* constructs the Lagrangian row: +v_1 +v_2 &lt;= 1 */

  delete_lp(lp);
  return(0);
}
</code></pre>
					<p>
						<A HREF="lp_solveAPIreference.htm">lp_solve API reference</A></p>
					<p>
						<b>See Also</b> <A HREF="make_lp.htm">make_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>,
						<A href="read_lp.htm">read_lp, read_LP</A>, <A HREF="read_mps.htm">read_mps,
							read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A>, <A HREF="add_constraint.htm">add_constraint, add_constraintex, str_add_constraint</A>, <A HREF="set_row.htm">set_row, set_rowex</A>, <A HREF="set_obj_fn.htm">set_obj_fn, set_obj_fnex, str_set_obj_fn, set_obj</A>, <A HREF="get_constr_type.htm">
							get_constr_type</A>, <A HREF="del_constraint.htm">del_constraint</A>, <A HREF="add_column.htm">
							add_column, add_columnex, str_add_column</A>, <A HREF="set_column.htm">set_column, set_columnex</A>, <A HREF="get_column.htm">get_column, get_columnex</A>,
						<A HREF="get_row.htm">get_row, get_rowex</A>, <A HREF="get_mat.htm">get_mat</A>, <A HREF="lag_solve.htm">
							lag_solve</A>, <A HREF="get_Lrows.htm">get_Lrows</A></p>
				</TD>
			</TR>
		</TABLE>
	</BODY>
</html>
