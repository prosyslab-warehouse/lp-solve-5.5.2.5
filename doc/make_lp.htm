<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<HEAD>
		<TITLE>make_lp</TITLE>
		<style TYPE="text/css"> BODY { font-family:verdana,arial,helvetica; margin:0; }
	</style>
	</HEAD>
	<BODY>
		<TABLE STYLE="TABLE-LAYOUT:fixed" class="clsContainer" CELLPADDING="15" CELLSPACING="0"
			WIDTH="100%" BORDER="0">
			<TR>
				<TD VALIGN="top">
					<h1>make_lp</h1>
					<p>
						Create and initialise a new lprec structure.</p>
					<p>
						<b>lprec *make_lp(int </b><i>rows</i><b>, int </b><i>columns</i><b>);</b></p>
					<p class="label">
						<b>Return Value</b></p>
					<p>
						Returns a pointer to a new lprec structure. This must be provided to almost all
						lp_solve functions.<br>
						A <b>NULL</b> return value indicates an error. Specifically not enough memory
						available to setup an lprec structure.</p>
					<p class="label">
						<b>Parameters</b></p>
					<p class="dt">
						<i>rows</i></p>
					<p class="indent">
						Initial number of rows. Can be 0 as new rows can be added via <A href="add_constraint.htm">
							add_constraint, add_constraintex, str_add_constraint</A></p>
					<p class="dt">
						<i>columns</i></p>
					<p class="indent">
						Initial number of columns. Can be 0 as new columns can be added via <A href="add_column.htm">
							add_column, add_columnex, str_add_column</A></p>
					<p class="label">
						<b>Remarks</b></p>
					<p>
						The <b>make_lp</b> function constructs a new LP. Sets all variables to initial
						values.<br>
						The LP has <i>rows</i> rows and <i>columns</i> columns. The matrix contains no
						values, but space for one value. All arrays that depend on <i>rows</i> and <i>columns</i>
						are allocated.<br>
						<br>
						It is advised not to read/write the lprec structure. Instead, use the function
						interface to communicate with the lp_solve library. This because the structure
						can change over time. The function interface will be more stable.
					</p>
					<p class="label">
						<b>Example</b></p>
					<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "lp_lib.h"

int main(void)
{
  lprec *lp;

  /* Create a new LP model */
  lp = make_lp(0, 0);
  if(lp == NULL) {
    fprintf(stderr, "Unable to create new LP model\n");
    return(1);
  }

  /* Model created */

  /*
  .
  .
  .
  */

  delete_lp(lp);
  return(0);
}
</code></pre>
					<p>
						<A HREF="lp_solveAPIreference.htm">lp_solve API reference</A></p>
					<p>
						<b>See Also</b> <A HREF="copy_lp.htm">copy_lp</A>, <A HREF="delete_lp.htm">delete_lp</A>, <A HREF="free_lp.htm">free_lp</A>,
						<A href="read_lp.htm">read_lp, read_LP</A>, <A HREF="read_mps.htm">read_mps,
							read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A>, <A HREF="resize_lp.htm">resize_lp</A></p>
				</TD>
			</TR>
		</TABLE>
	</BODY>
</html>
