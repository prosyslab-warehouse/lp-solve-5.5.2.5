<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<HEAD>
		<TITLE>write_basis</TITLE>
		<style TYPE="text/css"> BODY { font-family:verdana,arial,helvetica; margin:0; }
	</style>
	</HEAD>
	<BODY>
		<TABLE STYLE="TABLE-LAYOUT:fixed" class="clsContainer" CELLPADDING="15" CELLSPACING="0"
			WIDTH="100%" BORDER="0">
			<TR>
				<TD VALIGN="top">
					<h1>write_basis</h1>
					<p>
						Writes current basis to a file.</p>
					<P><B>unsigned char write_basis(lprec </b>*<i>lp</i>, <b>char </B>*<I>filename</I><B>);</B></P>
					<p class="label">
						<b>Return Value</b></p>
					<p>Returns TRUE if basis could be written to <i>filename</i> and FALSE if not.<br>
					   A FALSE return value indicates an error. Specifically file could not be
					   opened or not able to write in file.</p>
					<p class="label">
						<b>Parameters</b></p>
					<p class="dt">
						<i>lp</i></p>
					<p class="indent">
						Pointer to previously created lp model. See return value of <A HREF="make_lp.htm">make_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>,
						<A HREF="read_lp.htm">read_lp, read_LP</A>, <A HREF="read_mps.htm">read_mps, read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A></p>
					<P class="dt"><I>filename</I></P>
					<P class="indent">
					Filename to write the basis to.</p>
					<p class="label">
						<b>Remarks</b></p>
					<P>
						The <b>write_basis</b> function writes the current basis to <i>filename</i>.<br>
						This basis can later be reused by <A HREF="read_basis.htm">read_basis</A> to reset a basis.
                        Setting an initial basis can speed up the solver considerably. It is the
						starting point from where the algorithm continues to find an optimal solution.<br>
						When a restart is done, lp_solve continues at the last basis, except if <A HREF="set_basis.htm">
							set_basis</A>, <A HREF="default_basis.htm">default_basis</A>, <a href="guess_basis.htm">guess_basis</a> or <A HREF="read_basis.htm">read_basis</A> is called.
                    </P>
					<P>
						The basis in the file is written in <a href="bas-format.htm">MPS bas file format</a>.
                    </P>
                                        <P>
						When filename is NULL, then output is written to output set by
						<A href="set_output.htm">set_outputstream, set_outputfile</A>. By default this is stdout.
                    </P>
					<p class="label">
						<b>Example</b></p>
					<pre><code>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include "lp_lib.h"

int main(void)
{
  lprec *lp;
  int ret;

  /* Read LP model */
  lp = read_LP("model.lp", NORMAL, "test model");
  if(lp == NULL) {
    fprintf(stderr, "Unable to create new LP model\n");
    return(1);
  }

  ret = solve(lp);

  ret = write_basis(lp, "model.bas", NULL);

  delete_lp(lp);
  return(0);
}
</code></pre>
					<p>
						<A HREF="lp_solveAPIreference.htm">lp_solve API reference</A></p>
					<p>
						<b>See Also</b> <A HREF="make_lp.htm">make_lp</A>, <A HREF="copy_lp.htm">copy_lp</A>,
						<A href="read_lp.htm">read_lp, read_LP</A>, <A HREF="read_mps.htm">read_mps,
							read_freemps, read_MPS, read_freeMPS</A>, <A HREF="read_XLI.htm">read_XLI</A>, <A HREF="get_basis.htm">get_basis</A>, <A HREF="set_basis.htm">set_basis</A>, <A HREF="default_basis.htm">default_basis</A>, <A HREF="read_basis.htm">read_basis</A>, <a href="guess_basis.htm">guess_basis</a>, <A HREF="get_basiscrash.htm">get_basiscrash</A>, <A HREF="set_basiscrash.htm">set_basiscrash</A></p>
				</TD>
			</TR>
		</TABLE>
	</BODY>
</html>
