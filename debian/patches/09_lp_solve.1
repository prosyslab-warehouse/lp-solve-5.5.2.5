From: James Cowgill <james410@cowgill.org.uk>
To: 749555@bugs.debian.org
Subject: Bug#749555: lp-solve: please provide man page for /usr/bin/lp_solve
Date: Thu, 03 Sep 2015 23:26:56 +0100

https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=749555

--- a/lp_solve.1
+++ b/lp_solve.1
@@ -0,0 +1,821 @@
+.TH lp_solve 1 "September 2015"
+.SH NAME
+lp_solve \- a mixed integer linear programming (MILP) solver
+.SH SYNOPSIS
+.B lp_solve
+.RI [ options "] [" "input file" ]
+.SH DESCRIPTION
+.B lp_solve
+solves mixed integer linear programming problems. The program accepts models of
+problems in various different formats (including custom formats through XLIs)
+and attempts to solve them. There are a large number of different options
+which can be used to alter the solving process to improve performance or get
+more accurate results.
+
+.SS "lp file format"
+The lp file format is a simple, human readable file format for linear
+programming models. It is the default format used by
+.BR lp_solve .
+
+The format consists of series of statements, each ending in a semicolon. The
+first statement is always the objective function, followed by any number of
+constraints, followed by any number of declarations.
+
+The objective function consists of an expression to be optimized, optionally
+prefixed by
+.B max:
+or
+.B min:
+to specify which direction to optimize. The default is to maximize.
+
+Each constraint consists of a relational expression, optionally prefixed by a
+name followed by a colon. The expression must contain at least one relational operator
+.RB ( < , " <=" , " =", " =>", " >" ).
+You can specify ranges two operators at once (e.g. 2 < x < 4) instead of two
+separate constraints.
+
+Declarations can be one of:
+.TP
+\fBint \fIvar1 \fR[\fB, \fIvar2\fR]... ;
+Marks the variables as integers.
+.TP
+\fBbin \fIvar1 \fR[\fB, \fIvar2\fR]... ;
+Marks the variables as binary (can only take 0 or 1).
+.TP
+\fBsec \fIvar1 \fR[\fB, \fIvar2\fR]... ;
+Marks the variables as semi-continuous. These variables can always take the
+value 0 even if it is outside the variable's range.
+.TP
+\fBfree \fIvar1 \fR[\fB, \fIvar2\fR]... ;
+Marks the variables as free. These variables have no lower bound, unlike other
+variables which have a default lower bound of 0.
+.TP
+\fBsos \fR[\fIname\fB:\fR] \fIvar1 \fR[\fB, \fIvar2\fR]... [< \fIsostype\fR];
+Marks the variables as part of a special ordered set (SOS). Out of the variables
+listed, only one can be non-zero at once. If
+.I sostype
+is specified, then up to that number of variables can be non-zero as long as
+they are all adjacent to each other (e.g. for an
+.I sostype
+of 2,
+.I var1
+and
+.I var2
+could be non-zero, but not
+.I var1
+and
+.IR var3 ).
+.RE
+.PD
+
+Both C style comments
+.RB ( "/* " "comment here" " */" )
+and C++ style comments
+.RB ( "// " "comment until end of line)"
+can be used anywhere in the file.
+.SH OPTIONS
+.SS "General options"
+.TP
+.B \-wafter
+Writes the model after solving it (normally any model conversions are processed
+before solving). This is useful if presolving is used to simplify the model.
+.TP
+.B \-parse_only
+Parse the input model, but stop before solving it. This can be used to convert
+models between formats without solving them.
+.TP
+.BI \-timeout " sec"
+Timeout if no solution has be found after
+.I sec
+seconds.
+.TP
+.B \-nonames
+Ignore variable and constraint names in the input model (this is the same as
+combining both
+.BR \-norownames " " \-nocolnames ).
+.TP
+.B \-norownames
+Ignore constraint names in the input model.
+.TP
+.B \-nocolnames
+Ignore variable names in the input model.
+.TP
+.B \-min
+Minimizes the LP problem, overriding the setting in the input model.
+.TP
+.B \-max
+Maximizes the LP problem, overriding the setting in the input model.
+.SS "Built-in model languages"
+.TP
+.B \-lp
+Read the model from a file in LP format. This the the default.
+.TP
+.B \-mps
+Read the model from a file in 'fixed width' MPS format.
+.TP
+.B \-fmps
+Read the model from a file in 'free' MPS format. This is the same as
+.B \-mps
+except that fields are separated by a number of blanks instead of starting at
+fixed columns.
+.TP
+.BI \-wlp " filename"
+Converts the input model to LP format and writes it to the a file.
+.TP
+.BI \-wmps " filename"
+Converts the input model to 'fixed width' MPS format and writes it to a file.
+.TP
+.BI \-wfmps " filename"
+Converts the input model to 'free' MPS format and writes it to a file.
+.SS "External language interface (XLI)"
+.TP
+.BI \-rxli " xliname " "" filename
+Read the model using an external language interface (XLI).
+.I xliname
+specifies the path to the shared library containing the XLI, and is searched for
+according to the normal library search rules in
+.BR ld.so (8)
+with the addition that the library filename is prefixed with
+.I lib
+and suffixed with
+.I .so
+if necessary.
+.TP
+.BI \-rxlidata " datafilename"
+Provides a file containing extra data used by the reading XLI library.
+.TP
+.BI \-rxliopt " options"
+Extra options to pass to the reading XLI library.
+.TP
+.BI \-wxli " xliname " "" filename
+Converts the input model to the format used by an XLI and writes it to a file.
+The format of
+.I xliname
+is described in
+.B \-rxli
+above.
+.TP
+.BI \-wxliopt " options"
+Extra options to pass to the writing XLI library.
+.TP
+.BI \-wxlisol " xliname " "" filename
+Writes the model's solution to a file using an XLI library. The format of
+.I xliname
+is described in
+.B \-rxli
+above.
+.TP
+.BI \-wxlisolopt " options"
+Extra options to pass to the solution writing XLI library.
+.SS "Printing, verbosity and debugging"
+.TP
+.B \-h
+Print a usage message and exit.
+.TP
+.BI \-S level
+Solution detail. Each
+.I level
+builds on top of the previous one and adds more detail to the solution.
+
+.PD 0
+.RS 7
+.TP 5
+.B 0
+print nothing
+.TP
+.B 1
+objective value only
+.TP
+.B 2
+variables (default level)
+.TP
+.B 3
+constraints
+.TP
+.B 4
+duals
+.TP
+.B 5
+lp model
+.TP
+.B 6
+scales
+.TP
+.B 7
+lp tableau
+.RE
+.PD
+.TP
+.B \-time
+Print CPU time to parse input and to calculate solution.
+.TP
+\fB\-v\fR[\fIlevel\fR]
+Verbosity level. Controls the level of messages printed about the operation of
+the program.
+
+.PD 0
+.RS 7
+.TP 5
+.B 0
+neutral
+.TP
+.B 1
+critical
+.TP
+.B 2
+severe
+.TP
+.B 3
+important (default when
+.B \-v
+is provided with no
+.IR level )
+.TP
+.B 4
+normal (default when no
+.B \-v
+option is given)
+.TP
+.B 5
+detailed
+.TP
+.B 6
+full
+.RE
+.PD
+.TP
+.B \-t
+Trace pivot selection.
+.TP
+.B \-d
+Debug mode. All intermediate results and branch-and-bound decisions are printed.
+.TP
+.B \-R
+Report information while solving the model.
+.TP
+.BI \-Db " filename"
+Create a dump of internal model variables before solving the model to given
+file.
+.TP
+.BI \-Da " filename"
+Create a dump of internal model variables after solving the model, to given
+file.
+.TP
+.BR \-i [ a ]
+Print all intermediate valid solutions. If
+.B a
+is used, prints only non-zero values. Can give useful solutions even if the
+total run time is too long.
+
+.SS "Parameter files"
+.TP
+.BI \-rpar " filename"
+Reads a list of parameters from a file. The parameters file can specify the
+same options as you can by passing arguments to
+.B lp_solve
+but can be more convenient if you need to change lots of settings. The format
+of the parameters file is in the INI format often used by Windows applications.
+All parameters are read from key-value pairs in a single section. The default
+section is
+.BR [Default] .
+.TP
+\fB\-rparopt\fR '\fB\-h \fIheader\fR'
+Sets options for reading the parameters file. Currently the only option is
+.B \-h
+which changes the section within the file to read the parameters from.
+.TP
+.BI \-wpar " filename"
+Writes a parameters file based on the arguments given to
+.BR lp_solve .
+.TP
+\fB\-wparopt\fR '\fB\-h \fIheader\fR'
+Sets options for writing the parameter file. Currently the only option is
+.B \-h
+which changes the section within the file to write the parameters to.
+.SS "Basis files"
+.TP
+.BI \-rbas " filename"
+Reads a basis file which is used as the starting point for solving the LP
+model. Basis files must be in MPS basis format.
+.TP
+.BI \-gbas " filename"
+Computes a basis from a list of initial guesses for each variable. Each line of
+the given file is in the format:
+.IB variable : value
+where
+.I value
+is the initial guess for
+.IR variable .
+.TP
+.BI \-wbas " filename"
+After solving the LP model, writes a basis file in MPS format. This file can be
+read back using
+.BR \-rbas .
+
+.RS 7
+.PD 0
+Available options:
+.TP 5
+.B 0
+no crash basis (default).
+.TP
+.B 1
+most feasible basis.
+.TP
+.B 2
+least degenerate basis.
+.PD
+.RE
+
+.SS "Integer and branch and bound options"
+.TP
+.B \-noint
+Ignore integer restrictions on variables.
+.TP
+.B \-f
+Stops the branch and bound algorithm immediately after finding its first
+solution.
+.TP
+.BI \-o " bound"
+Stops the branch and bound algorithm immediately after finding a solution whose
+objective function has a value greater than this bound.
+.TP
+.BI \-b " bound"
+Sets a lower bound for the objective function. The branch and bound algorithm
+will immediately reject all solutions lower than this value.
+.TP
+.BI \-depth " limit"
+Sets the depth limit for the branch and bound algorithm. A value of 0 disables
+depth limiting. A negative value sets a relative depth limit based on the number
+of variables in the input model. The default limit is \-50.
+.TP
+.BI \-e " tolerance"
+Sets the tolerance which is used to determine whether a floating point
+number is an integer. A number has to be within this value of an integer to be
+considered one. The default value is 1e-7.
+.TP
+\fB\-g \fItolerance\fR, \fB\-ga \fItolerance\fR
+Sets the absolute MIP gap used by the branch and bound algorithm. This
+tolerance is the difference between the best-found solution yet and the current
+solution. If the difference is smaller than this tolerance then the solution
+(and all the sub-solutions) is rejected. This can result in faster solving
+times, but results in a solution which is not the perfect solution. The default
+value is 1e-11.
+.TP
+.BI \-gr " tolerance"
+Sets the relative MIP gap used by the branch and bound algorithm. This is
+similar to the absolute tolerance except that the difference is scaled by the
+best found solution before being compared to this tolerance. The default value
+is 1e-11.
+.TP
+.BR \-c ", " \-cc
+During branch and bound, take the ceiling branch first.
+.TP
+.B \-cf
+During branch and bound, take the floor branch first.
+.TP
+.B \-ca
+During branch and bound, allow the algorithm to decide which branch to take.
+This is the default.
+.TP
+.BI \-n " solution"
+If the branch and bound algorithm produces multiple solutions with the same
+objective function value, prints the nth solution. Solution numbers start at 1.
+.TP
+.BI \-B rule
+Sets a branch and bound rule to use. The default rules are:
+.B \-B5 \-Bg \-Bd \-Bc
+
+.RS 7
+.PD 0
+These rules are mutually exclusive:
+.TP 5
+.B 0
+select lowest indexed non-integer column.
+.TP
+.B 1
+selection based on distance from the current bounds.
+.TP
+.B 2
+selection based on the largest current bound.
+.TP
+.B 3
+selection based on largest fractional value.
+.TP
+.B 4
+simple, unweighted pseudo-cost of a variable.
+.TP
+.B 5
+extended pseudo-costing strategy based on minimizing the number of integer
+infeasibilities.
+.TP
+.B 6
+extended pseudo-costing strategy based on maximizing the normal pseudo-cost
+divided by the number of infeasibilities.
+.PD
+.PP
+.PD 0
+The above rules can be combined with any of the following:
+.TP 5
+.B w
+WeightReverse - select by criterion minimum (worst), rather than criterion
+maximum (best).
+.TP
+.B b
+BranchReverse - when
+.B \-ca
+is selected, choose the opposite direction.
+.TP
+.B g
+Greedy
+.TP
+.B p
+PseudoCost - toggles between weighting based on pseudocost or objective
+function value.
+.TP
+.B f
+DepthFirst - select the node that has already been selected before the most
+number of times.
+.TP
+.B r
+Randomize - ddds a randomization factor to the score for any node candidate.
+.TP
+.B G
+GubMode
+.TP
+.B d
+Dynamic - when
+.B \-Bf
+is selected, switch off this mode when a first solution is found.
+.TP
+.B s
+RestartMode - enables regular restarts of pseudocost value calculations.
+.TP
+.B B
+BreadthFirst - select the node that has been selected before the fewest number
+of times or not at all.
+.TP
+.B o
+AutoOrder - order variables to improve branch-and-bound performance.
+.TP
+.B c
+ReducedCostFixing - do bound tightening during B&B based of reduced cost info.
+.TP
+.B i
+StringInit - initialize pseudo-costs by strong branching.
+.PD
+.RE
+.SS "Simplex algorithm options"
+.TP
+.BR \-prim ", " \-simplexpp
+Prefer the primal simplex method for both phase 1 and phase 2.
+.TP
+.BR \-dual ", " \-simplexdd
+Prefer the dual simplex method for both phase 1 and phase 2.
+.TP
+.BR \-simplexdp
+Prefer the dual simplex method for phase 1 and primal method for phase 2. This
+is the default.
+.TP
+.BR \-simplexpd
+Prefer the primal simplex method for phase 1 and dual method for phase 2.
+.TP
+.BI \-bfp " filename"
+Sets the basis factorization package to use.
+.I filename
+refers to a shared library loaded in the same way
+.B \-rxli
+loads libraries.
+.TP
+.BI \-o value
+Sets whether the objective function is stored in the top row of the constraint
+matrix or in separate storage.
+.B \-o0
+places the matrix in separate storage, and
+.B \-o1
+(the default) places it in the constraint matrix.
+.TP
+.BI \-C mode
+Sets the basis crash mode. When base crash is enabled, a heuristic 'crash
+procedure' is executed before the first simplex iteration to quickly choose
+a basis matrix that has fewer artificial variables. This procedure tends to
+reduce the number of iterations to optimality since a number of iterations are
+skipped.
+.TP
+.BI \-r " value"
+Sets the maximum number of pivots between a re-inversion of the matrix. For
+stability reasons, lp_solve re-inverts the matrix on regular times. The default
+is 250 for the LUSOL bfp and 42 for the other BFPs.
+.TP
+.BI \-trej " value"
+Sets the value that is used as a tolerance pivot element to determine whether a
+value should be considered as 0. The default is 2e-7.
+.TP
+.BI \-epsd " value"
+Sets the value that is used as a tolerance for reduced costs to determine
+whether a value should be considered as 0. The default is 1e-9.
+.TP
+.BI \-epsb " value"
+Sets the value that is used as a tolerance for the Right Hand Side (RHS) to
+determine whether a value should be considered as 0.
+The default is 1e-10.
+.TP
+.BI \-epsel " value"
+Sets the value that is used as a tolerance for rounding values to zero. The
+default is 1e-12.
+.TP
+.BI \-epsp " value"
+Sets the value that is used as perturbation scalar for degenerative problems.
+The default is 1e-5.
+.TP
+.BI \-improve level
+Sets the iterative improvement level.
+.I level
+is a number which can be created by combining the different levels below. The
+default is
+.BR \-improve6 .
+
+.RS 7
+.PD 0
+.TP 5
+.B 0
+none.
+.TP
+.B 1
+running accuracy measurement of solved equations on Bx=r.
+.TP
+.B 2
+improve initial dual feasibility by bound flips.
+.TP
+.B 4
+low-cost accuracy monitoring in the dual.
+.TP
+.B 8
+check for primal/dual feasibility at the node level.
+.PD
+.RE
+.TP
+.BI \-piv rule
+Sets a simplex pivot rule or mode to use. The default rules are:
+.B \-piv2 \-piva
+
+.RS 7
+.PD 0
+These rules are mutually exclusive:
+.TP 5
+.B 0
+select first.
+.TP
+.B 1
+select according to Dantzig.
+.TP
+.B 2
+select Devex pricing from Paula Harris.
+.TP
+.B 3
+select steepest edge.
+.PD
+.PP
+.PD 0
+The above rules can be combined with any of the following modes:
+.TP 5
+.B f
+PrimalFallback - when steepest edge
+.RB ( \-priv3 )
+is selected, fallback to Devex in primal.
+.TP
+.B m
+Multiple - preliminary implementation of the multiple pricing scheme. This
+means that attractive candidate entering columns from one iteration may be used
+in the subsequent iteration, avoiding full updating of reduced costs. In the
+current implementation, lp_solve only reuses the 2nd best entering column
+alternative
+.TP
+.B a
+Adaptive - temporarily use alternative strategy if cycling is detected.
+.TP
+.B r
+Randomize - adds a small randomization effect to the selected pricer.
+.TP
+.B ll
+LoopLeft - scan entering/leaving columns left rather than right.
+.TP
+.B la
+LoopAlternate - scan entering/leaving columns alternating left/right.
+.TP
+.B h
+HarrisTwoPass - use Harris' primal pivot logic rather than the default.
+.TP
+.B t
+TrueNormInit - use true norms for Devex and Steepest Edge initializations.
+.PD
+.RE
+.TP
+.BI \-degen option
+.\"Strictly speaking 'option' is optional, but using -degen appears to be a 
+.\"no-op since the modes it enables are already enabled automatically.
+Specifies if special handling must be done to reduce degeneracy/cycling while
+solving. The default options are:
+.BR \-degenf " " \-degens .
+
+.RS 7
+.PD 0
+Available options:
+.TP 5
+.B c
+ColumnCheck
+.TP
+.B d
+Dynamic
+.TP
+.B f
+FixedVars
+.TP
+.B s
+Stalling
+.TP
+.B n
+NumFailure
+.TP
+.B l
+Lostfeas
+.TP
+.B i
+Infeasible
+.TP
+.B b
+DuringBB
+.TP
+.B r
+RHSPerturb
+.TP
+.B p
+BoundFlip
+.PD
+.RE
+.SS "Other solving options"
+.TP
+\fB\-presolve\fR[\fIoption\fR]
+Enables a presolve option. These options attempt to speed up calculations by
+simplifying the model before solving it. Any of these options can be combined
+together. If
+.I option
+is not specified, row and column presolving is enabled (as if
+.B \-presolverow \-presolvecol
+had been used). The default not to presolve.
+
+.RS 7
+.PD 0
+Available options:
+.TP 5
+.B row
+Rows - presolve rows.
+.TP
+.B col
+Cols - presolve columns.
+.TP
+.B l
+LinDep - eliminate linearly dependent rows.
+.TP
+.B s
+Sos - convert constraints to SOSes (only SOS type 1 handled).
+.TP
+.B r
+ReduceMip - if the phase 1 solution process finds that a constraint is redundant
+then this constraint is deleted.
+.TP
+.B k
+Knapsack - simplification of knapsack-type constraints through addition of an
+extra variable, which also helps bound the objective function.
+.TP
+.B q
+ElimEQ2 - direct substitution of one variable in 2-element equality constraints;
+this requires changes to the constraint matrix.
+.TP
+.B m
+MergeRows - merges neighboring >= or <= constraints when the vectors are
+otherwise relatively identical into a single ranged constraint.
+.TP
+.B fd
+ColFixDual - variable fixing and removal based on considering signs of the
+associated dual constraint.
+.TP
+.B bnd
+Bounds - does bound tightening based on full-row constraint information.
+.TP
+.B d
+Duals - presolve duals.
+.TP
+.B f
+ImpliedFree - identify implied free variables (releasing their explicit bounds).
+.TP
+.B slk
+ImpliedSlk- converts qualifying equalities to inequalities by converting a
+column singleton variable to slack.
+.TP
+.B g
+ReduceGCD - reduce (tighten) coefficients in integer models based on GCD
+argument.
+.TP
+.B b
+ProbeFix - attempt to fix binary variables at one of their bounds.
+.TP
+.B c
+ProbeReduce - attempt to reduce coefficients in binary models.
+.TP
+.B rowd
+RowDominate - identify and delete qualifying constraints that are dominated by
+others, also fixes variables at a bound.
+.TP
+.B cold
+ColDominate - deletes variables (mainly binary), that are dominated by others
+(only one can be non-zero).
+.PD
+.RE
+.TP
+\fB\-s\fR[\fImode\fR] [\fIscalelimit\fR]
+Sets the scaling algorithm and/or scaling limit to use.
+.I scalelimit
+can only be specified when using the mutually exclusive integer modes. Omitting
+.I mode
+is the equivalent of using
+.BR \-s4 .
+The default algorithm and limit is:
+.B \-s1 5 \-si \-se
+
+.RS 7
+.PD 0
+These rules are mutually exclusive:
+.TP 5
+.B 0
+no scaling.
+.TP
+.B 1
+geometric scaling.
+.TP
+.B 2
+Curtis-Reid scaling.
+.TP
+.B 3
+scale to convergence using largest absolute value.
+.TP
+.B 4
+numerical range-based scaling.
+.TP
+.B 5
+scale to convergence using logarithmic mean of all values.
+.TP
+.B 6
+scale based on the simple numerical range.
+.TP
+.B 7
+scale quadratic.
+.PD
+.PP
+.PD 0
+The above rules can be combined with any of the following:
+.TP 5
+.B p
+also do power scaling.
+.TP
+.B i
+also scale integer variables.
+.TP
+.B e
+ensure no scaled number is outside the range -1..1.
+.PD
+.RE
+.SH EXAMPLE
+.SS "Model solving"
+The following example shows a model being solved by
+.BR lp_solve .
+The first line contains the objective function to be maximized and the last 3
+lines contain the constraints.
+
+.nf
+$ \fBcat example.lp\fR
+max: 143 x + 60 y;
+
+120 x + 210 y <= 15000;
+110 x + 30 y <= 4000;
+x + y <= 75;
+
+$ \fBlp_solve -S3 example.lp\fR
+Value of objective function: 6315.63
+
+Actual values of the variables:
+x                          21.875
+y                          53.125
+
+Actual values of the constraints:
+R1                        13781.2
+R2                           4000
+R3                             75
+.fi
+.SS "Format conversion"
+This example converts a file in lp format to mps format.
+
+$
+.B lp_solve -parse_only -lp example.lp -wmps example.mps
+.SH "SEE ALSO"
+.BR ld.so (8)
